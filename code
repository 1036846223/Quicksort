import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Arrays;

//列表快排方法
public class Quicksort{
	public static void main(String[] args){
		int [] arr=new int [100];
		for (int i=0;i<100;i++){    //随机赋值函数
			arr[i]= (int) (Math.random()*8000000);
		}
//		打印日期
		Date Data1= new Date();
		SimpleDateFormat simpleDateFormat= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  //日期格式
		String data1Str= simpleDateFormat.format(Data1);
		System.out.println("排序前"+data1Str);//打印时间
		quicksort(arr,0,arr.length-1);//调用排序函数
		
		Date Data2= new Date();
//		SimpleDateFormat simpleDateFormat= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String data2Str= simpleDateFormat.format(Data2);
		System.out.println("排序后"+data2Str);
		System.out.println("arr="+Arrays.toString(arr));
		
	}
	
	public static void quicksort(int []arr,int left,int right){
		int l =left;
		int r =right;
		int pivot=arr[(left+right)/2];//中值，也可以为其他值
		int temp=0;//辅助中转变量
//		序号函数
		while(l<r){
			while (arr[l]<pivot){
				l+=1;
			}
			while (arr[r]>pivot){
				r-=1;
			}
			if(l>=r){
				break;
			}
//			交换值
			temp=arr[l];
			arr[l]=arr[r];
			arr[r]=temp;
//			因为交换过后，要动原来的值，所以下面是r-=1
			if(arr[l]==pivot){
				r-=1;
			}
			if (arr[r]==pivot){
				l+=1;
			}
		}
//		防止栈溢出
		if(l==r){
			l+=1;
			r-=1;
		}
//		递归求解
		if (l<right){
			quicksort(arr,l,right);
		}
		if (left<r){
			quicksort(arr,left,r);
		}
	}
}
