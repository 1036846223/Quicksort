package try_;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Arrays;
public class Mergesort {

	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		int []arr=new int [800000];
//		int []arr={-1,4,7,90,23,89,23420,43,-4,-90,-45};
		int []temp=new int [arr.length];
		for(int i=0;i<800000;i++){
			arr[i]=(int)(Math.random()*8000000);
		}
		
		Date data1= new Date();
		SimpleDateFormat simpleDateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String data1str=simpleDateFormat.format(data1);
		System.out.println("开始"+data1str);
		
		merge(arr,0,arr.length-1,temp);
//		System.out.println("arr="+Arrays.toString(arr));
		
		Date data2= new Date();
//		SimpleDateFormat simpleDateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String data2str=simpleDateFormat.format(data2);
		System.out.println("结束"+data2str);
	}
//	分+合并
	public static void merge(int[]arr,int left,int right,int []temp){
		if (left<right){
			int mid=(left+right)/2;
			merge(arr,left,mid,temp);
			merge(arr,mid+1,right,temp);
			mergesort(arr,left,right,mid,temp);
		}
//		左递归
//		右递归
//		合并

	}
//	合并
	public static void mergesort(int []arr,int left,int right,int mid,int []temp){
		int l =left;
		int m=mid+1;
		int t=0;
//		1.两个序列进行比较，排序合并，至一个序列为空
//		2.将另一个不为空的序列合并至temp
//		3.将temp赋值至arr
		while(l<=mid && m<=right){
			if (arr[l]<=arr[m]){
				temp[t]=arr[l];
				t+=1;
				l+=1;
			}else{
				temp[t]=arr[m];
				t+=1;
				m+=1;
			}
		}
//		
		while (l<=mid){
			temp[t]=arr[l];
			t+=1;
			l+=1;
		}
		while(m<=right){
			temp[t]=arr[m];
			t+=1;
			m+=1;
		}
//		
		int templeft=left;
		t=0;
		while(templeft<=right){
			arr[templeft]=temp[t];
			t+=1;
			templeft+=1;
		}
	}

}
